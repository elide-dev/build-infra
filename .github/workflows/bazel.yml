name: "Bazel"

on:
  workflow_call:
    inputs:
      ## Job label
      label:
        description: "Label"
        default: "Bazel"
        required: false
        type: string

      ## Bazel command to run.
      command:
        description: "Command to run"
        default: "build"
        required: false
        type: string

      ## Bazel targets to run the command against.
      targets:
        description: "Targets"
        default: "//..."
        required: false
        type: string

      ## Bazel flags to pass.
      flags:
        description: "Flags"
        required: false
        type: string

      ## Runner machine to use.
      runner:
        description: "Runner"
        required: false
        type: string

      ## Whether to cache using Actions.
      cache_action:
        description: "Action cache"
        required: false
        type: boolean
        default: true

      ## Whether to apply read-only mode to the cache.
      cache_read_only:
        description: "Read-only cache"
        required: false
        type: boolean
        default: false

      ## Whether to upload built artifacts.
      artifacts:
        description: "Artifacts"
        required: false
        type: boolean
        default: false

      ## Whether to upload built reports.
      reports:
        description: "Reports"
        required: false
        type: boolean
        default: true

      ## Bazel version to force
      version:
        description: "Bazel version"
        required: false
        type: string
        default: ""

      ## Artifact outputs
      outputs:
        description: "Outputs list"
        required: false
        type: string
        default: ""

      ## Artifact name.
      artifact:
        description: "Artifact name"
        required: false
        type: string
        default: ""

      ## Artifact retention days.
      retention:
        description: "Artifact retention (days)"
        required: false
        type: number
        default: 7

      ## Artifact compression level,
      compression:
        description: "Artifact compression level"
        required: false
        type: number
        default: 6

      ## Network mode to apply.
      network:
        description: "Network"
        required: false
        type: string
        default: audit

    secrets:
      BUILDLESS_APIKEY:
        description: "Buildless API key"
        required: false
      BUILDBUDDY_APIKEY:
        description: "BuildBuddy API key"
        required: false

permissions:
  contents: read

jobs:
  ## Build with Bazel
  build-bazel:
    name: ${{ inputs.label }}
    runs-on: ${{ inputs.runner || vars.RUNNER || vars.RUNNER_AMD64 || vars.RUNNER_DEFAULT || 'ubuntu-latest' }}
    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "read"
    env:
      BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
      BUILDBUDDY_APIKEY: ${{ secrets.BUILDBUDDY_APIKEY }}
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: ${{ inputs.network || 'audit' }}
      - name: "Setup: Checkout"
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          persist-credentials: false
      - name: "Setup: Bazel"
        uses: bazelbuild/setup-bazelisk@b39c379c82683a5f25d34f0d062761f62693e0b2 # v3.0.0
      - name: "Setup: Buildless Key"
        if: env.BUILDLESS_APIKEY != ''
        run: echo "build --remote_cache_header=x-api-key=${{ secrets.BUILDLESS_APIKEY }}" >> local.bazelrc
      - name: "Setup: BuildBuddy Key"
        if: env.BUILDBUDDY_APIKEY != ''
        run: echo "build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_APIKEY }}" >> local.bazelrc
      - name: "Setup: Bazel Version"
        if: inputs.version != ''
        run: echo "${{ inputs.version }}" > .bazelversion
      - name: "Setup: Buildless"
        uses: buildless/setup@30e82389418c7f17046606183bc4c78b2c8913e0  # v1.0.2
        if: env.BUILDLESS_APIKEY != ''
      - name: "Setup: Cache"
        uses: buildless/cache@e376f15c6ec6dc595375c78633174c7e5f92dc0e # v3
        if: inputs.cache_action
        with:
          path: |
            ~/.cache/bazel
          key: bazelbuild-${{ github.ref }}-${{ hashFiles('WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel', 'WORKSPACE.bzlmod') }}
          restore-keys:
            bazelbuild-${{ github.ref }}
            bazelbuild-
      - name: "Setup: Java"
        uses: buildless/setup-java@3232623d9c428cc5f228a01a2ae8d2d70f79775e # v4.0.0
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: "Build: Bazel"
        id: bazelbuild
        run: bazel ${{ inputs.command }} ${{ inputs.flags }} ${{ inputs.targets }}
      - name: "Build: Artifacts"
        if: inputs.artifacts && inputs.artifact != ''
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ inputs.artifact }}
          path: ${{ inputs.outputs }}
          retention-days: ${{ inputs.retention }}
          compression-level: ${{ inputs.compression }}
          if-no-files-found: warn
      - name: "Build: Output Subjects"
        id: hash
        if: inputs.outputs != ''
        run: |
          set -euo pipefail
          sha256sum ${{ inputs.outputs }} > checksums
          echo "hashes=$(base64 -w0 < checksums)" >> "$GITHUB_OUTPUT"
