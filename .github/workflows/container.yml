name: "Container"

on:
  workflow_call:
    inputs:
      ## Coordinates for the image.
      image:
        description: "Image"
        required: true
        type: string

      ## Tags to apply to the image. If unspecified, standard tags are applied.
      tags:
        description: "Image"
        required: false
        type: string

      ## Registry to push to, prefix to use.
      registry:
        description: "Registry"
        required: false
        default: "ghcr.io"
        type: string

      ## Whether to push the image to GHCR.
      push:
        description: "Push image"
        default: false
        required: false
        type: boolean

      ## Context path for the container build.
      path:
        description: "Context path"
        default: "."
        required: false
        type: string

      ## Dockerfile to build.
      dockerfile:
        description: "Dockerfile"
        required: false
        type: string

      ## Platforms to build for.
      platforms:
        description: "Platforms"
        default: "linux/amd64,linux/arm64"
        required: false
        type: string

      ## Runner machine to use.
      runner:
        description: "Runner"
        required: false
        type: string

      ## Whether to authenticate.
      auth:
        description: "Authenticate"
        required: false
        default: true
        type: boolean

env:
    CONTAINER_REGISTRY: ghcr.io

permissions:
  contents: read

jobs:
  ## Build a container image.
  build-container:
    name: "Build"
    runs-on: ${{ inputs.runner || vars.RUNNER || vars.RUNNER_AMD64 || vars.RUNNER_DEFAULT || 'ubuntu-latest' }}
    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
      packages: "write"
    outputs:
      imageid: ${{ steps.dockerpush.outputs.imageid }}
      digest: ${{ steps.dockerpush.outputs.digest }}
    steps:
        - name: Harden Runner
          uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
          with:
            egress-policy: audit

        - name: "Setup: Checkout"
          uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        - name: "Setup: QEMU"
          uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
          with:
            platforms: "amd64,arm64,arm"
        - name: "Setup: Docker"
          uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
          id: buildx
          with:
            install: true
        - name: "Setup: GitHub Credentials"
          uses: docker/login-action@b4bedf8053341df3b5a9f9e0f2cf4e79e27360c6
          if: inputs.auth
          with:
            registry: ${{ inputs.registry }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: "Setup: Image Metadata"
          id: meta
          uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
          with:
            images: ${{ inputs.registry }}/${{ inputs.image }}
            labels: |
              org.opencontainers.image.vendor=Elide
            tags: |
              type=raw,value=latest,enable={{is_default_branch}}
              type=ref,event=branch
              type=ref,event=tag
              type=ref,event=pr
        - name: "Build: Container"
          uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
          id: dockerpush
          with:
            push: ${{ inputs.push }}
            tags: ${{ inputs.tags || steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: ${{ inputs.platforms }}
            context: ${{ inputs.path }}
            file: ${{ inputs.dockerfile }}
            sbom: true
        - name: "Artifacts: Outputs"
          if: ${{ github.ref == 'refs/heads/main' || (inputs && inputs.push) }}
          run: |
            echo "${{ steps.dockerpush.outputs.imageid }}" > ./image_id
            echo "${{ steps.dockerpush.outputs.digest }}" > ./digest
        - name: "Artifacts: Release"
          uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
          if: ${{ github.ref == 'refs/heads/main' || (inputs && inputs.push) }}
          with:
            name: release-artifacts
            path: |
              ./image_id
              ./digest
  