name: "Build: Gradle (JVM)"

on:
  workflow_call:
    inputs:
      ## Gradle action/target to run.
      action:
        description: "Action to run"
        default: "build"
        required: false
        type: string

      ## Gradle build flags to pass.
      flags:
        description: "Flags"
        required: false
        type: string

      ## Runner machine to use.
      runner:
        description: "Runner"
        required: false
        type: string

      ## Build step label to use.
      label:
        description: "Label"
        default: "Gradle"
        required: false
        type: string

      ## Whether to ignore errors.
      labs:
        description: "Labs"
        required: false
        type: boolean
        default: false

      ## Whether to install a regular JDK.
      install_jvm:
        description: "Install JDK"
        required: false
        type: boolean
        default: true

      ## JVM version to use.
      jvm:
        description: "JVM Version"
        required: false
        type: string

      ## JVM distribution.
      jvm_dist:
        description: "JVM Variant"
        required: false
        type: string
        default: 'adopt-hotspot'

      ## Whether to install GraalVM.
      install_gvm:
        description: "Install GraalVM"
        required: false
        type: boolean
        default: false

      ## GVM version to use.
      gvm:
        description: "GVM Version"
        required: false
        type: string

      ## Whether to report coverage.
      coverage:
        description: "Report coverage"
        required: false
        default: false
        type: boolean

      ## Where to find the coverage report.
      coverage_report:
        description: "Coverage report file"
        required: false
        type: string

      ## Tags/flags for coverage report.
      coverage_flags:
        description: "Coverage flags"
        required: false
        type: string

      ## Whether to cache locally.
      cache_local:
        description: "Local cache"
        required: false
        type: boolean
        default: false

      ## Whether to cache remotely.
      cache_remote:
        description: "Remote cache"
        required: false
        type: boolean
        default: true

      ## Whether to cache using Actions.
      cache_action:
        description: "Action cache"
        required: false
        type: boolean
        default: true

      ## Whether to apply read-only mode to the cache.
      cache_read_only:
        description: "Read-only cache"
        required: false
        type: boolean
        default: false

      ## Whether to upload built artifacts.
      artifacts:
        description: "Artifacts"
        required: false
        type: boolean
        default: false

      ## Name of the output artifact.
      artifact:
        description: "Artifact"
        required: false
        type: string
        default: "gradle-build-output"

      ## Whether to upload a provenance release.
      provenance:
        description: "Provenance"
        required: false
        type: boolean
        default: false

      ## Whether to run checks.
      checks:
        description: "Checks"
        required: false
        type: boolean
        default: true

      ## Whether to perform release/publish steps.
      publish:
        description: "Publish"
        required: false
        type: boolean
        default: false

      ## Whether to upload built reports.
      reports:
        description: "Reports"
        required: false
        type: boolean
        default: true

      ## Gradle version to use (defaults to wrapper version)
      gradle:
        description: "Gradle version"
        required: false
        type: string
        default: 'wrapper'

      ## Network mode to apply.
      network:
        description: "Network"
        required: false
        type: string
        default: audit

      ## Endpoints to allow.
      endpoints:
        description: "Endpoints"
        required: false
        type: string
        default: 'github.com:443'

      ## Whether to disable sudo.
      sudoless:
        description: "Disable Sudo"
        required: false
        type: boolean
        default: true

      ## Outputs to include in assertions.
      outputs:
        description: "Outputs"
        required: false
        type: string
        default: "./build/libs/*"

      ## Path where reports are expected.
      reports_path:
        description: "Reports Path"
        required: false
        type: string
        default: "./build/reports/"

      ## Dependency Graph submission mode
      graph:
        description: "Dependency Graph"
        required: false
        type: string
        default: "generate-and-submit"

      ## Enable build scans
      scan:
        description: "Build Scan"
        required: false
        type: boolean
        default: false

    secrets:
      GDS_TOKEN:
        description: "GDS token"
        required: false
      SONAR_TOKEN:
        description: "Sonar token"
        required: false
      BUILDLESS_APIKEY:
        description: "Buildless API key"
        required: false
      CODECOV_TOKEN:
        description: "CodeCov token"
        required: false

env:
  GVM_VERSION: ${{ inputs.gvm || vars.GVM_VERSION || 'latest' }}
  JVM_VERSION: ${{ inputs.jvm || vars.JVM_VERSION || '21' }}
  JVM_DIST: ${{ inputs.jvm_dist || vars.JVM_DIST || 'adopt-hotspot' }}
  GVM_DIST: ${{ vars.GVM_DIST || 'graalvm' }}
  GRADLE_CACHE_LOCAL: ${{ inputs.cache_local }}
  GRADLE_CACHE_REMOTE: ${{ inputs.cache_remote }}
  BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
  GRADLE_CACHE_PASSWORD: ${{ secrets.BUILDLESS_APIKEY }}

permissions:
  contents: read

jobs:
  ## Build JVM app with Gradle
  build:
    name: "${{ inputs.label }}: Build"
    runs-on: ${{ inputs.runner || vars.RUNNER || vars.RUNNER_AMD64 || vars.RUNNER_DEFAULT || 'ubuntu-latest' }}
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: "write"
      id-token: "write"
      checks: "write"
      pull-requests: "read"
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: ${{ inputs.network || 'audit' }}
          disable-sudo: ${{ inputs.sudoless }}
          allowed-endpoints: ${{ inputs.endpoints }}
      - name: "Setup: Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: "Setup: JDK ${{ env.JVM_VERSION }}"
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        if: inputs.install_jvm
        with:
          distribution: ${{ env.JVM_DIST }}
          java-version: ${{ env.JVM_VERSION }}
      - name: "Setup: GraalVM"
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        if: inputs.install_gvm
        with:
          distribution: ${{ env.GVM_DIST || 'graalvm' }}
          java-version: ${{ env.JVM_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Check Gradle Wrapper"
        uses: gradle/wrapper-validation-action@f9c9c575b8b21b6485636a91ffecd10e558c62f6 # v3.5.0
        if: inputs.checks
      - name: "Setup: Gradle"
        continue-on-error: ${{ inputs.labs || false }}
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0
        id: gradlebuild
        env:
          CI: true
          TEST_EXCEPTIONS: true
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          gradle-version: ${{ inputs.gradle || 'wrapper' }}
          cache-read-only: ${{ inputs.cache_read_only || false }}
          dependency-graph: ${{ inputs.graph }}
          build-scan-publish: ${{ inputs.scan }}
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: ${{ inputs.scan && 'yes' || 'no' }}
      - name: "Build: Gradle"
        run: |
          ./gradlew \
            ${{ inputs.action || 'build' }} \
            ${{ inputs.flags }} \
            -Pci=true
      - name: "Build: Provenance Subject"
        id: hash
        run: |
          echo "hashes=$(sha256sum ${{ inputs.outputs }} | base64 -w0)" >> "$GITHUB_OUTPUT"
      - name: "Report: Codecov"
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5.3.1
        if: inputs.coverage
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ inputs.coverage_report }}
          flags: ${{ inputs.coverage_flags }}
      - name: "Publish: Build Artifacts"
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: inputs.artifacts
        with:
          name: ${{ inputs.artifact }}
          path: |
            ${{ inputs.outputs }}
            ${{ inputs.reports_path }}

  ## Report: Provenance
  provenance:
    name: Provenance
    needs: [build]
    if: inputs.provenance
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: ${{ inputs.publish }}
